
/* 1. accept comments            */
/* 2. functions= function int hi(int x, int y){x = 2; y = 3; return x;}
/* 3. order of operation */
/* 4. multiply float and int */ 
/* 6. adding to an array of strings. (no char, and like python) */ 
/* 7. everytime displayMessage, it should show message*/ 
/* 8. writeln is line breaks*/ 


int aNumber;
float secondNumber;
string someLetter;  /* unused variable */
string message[50];
float justAverage;

function float average(float a, float b, float c){
	float avg;
	avg = (a + b + c)/3.0;
	return avg;
}

function float unreachableFunction(float x, float y){
   /* 
	This function does nothing and should
	Be removed from IR code in the optimization step
   */

   float result;
   result = x*y + x*y;

   return result;
}

function int displayMessage(){
	message[0] = "I";
	message[1] = " ";
	message[2] = "c";
	message[3] = "a";
	message[4] = "n";
	message[5] = " ";
	message[6] = "p";
	message[7] = "r";
	message[8] = "i";
	message[9] = "n";
	message[10] = "t";
	message[11] = ":";

    write message;
	addline;
	
	return 0;
}

function float ambitiousFunction(float a, float b, float c){

   /* great optimization opportunity */

   float result;
 
   result = (average(a, b, c) + average(a, b, c))/2.0;

   return result;
}

justAverage = average(12.5, 13.7, 25.8);
aNumber = displayMessage();
write justAverage;
addline;

justAverage = justAverage * (justAverage + 2.0);
justAverage = average(justAverage, 0.0, 0.0);
aNumber = displayMessage();
addline;

aNumber = displayMessage();
aNumber = aNumber / (aNumber + aNumber * aNumber);
write aNumber;
addline;

justAverage = ambitiousFunction(1.0, 2.0, 3.0);
aNumber = displayMessage();
write justAverage;